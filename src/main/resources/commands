* Brief dewscription

- in Back-end : cron jobs that run every 1 minute and generate random vehicle data that stored in DB
- in Front-end : angular request every 1.5 minute to fetch the updated data about vehicle and display it in angular Datatable with customer information

----------------------------------------------------------------------------------------------------------------------------

** Tools 
Jhipster framework that generates a basic spring boot 2 and angular 7 project.
Mysql DB .
Angular Datatable for displaying Data.

----------------------------------------------------------------------------------------------------------------------------

** How the solution will make use of cloud
1- EC2 (WEB Server)to deploy WAR file or Docker image 
2- RDS (DB) as data store

----------------------------------------------------------------------------------------------------------------------------

** Deployment steps.

** Pull the image from Docker Hub

1- Run Mysql Docker Image=> 
 docker run --name=docker-mysql --env="MYSQL_ROOT_PASSWORD=root" --env="MYSQL_PASSWORD=root" --env="MYSQL_DATABASE=testpro" mysql

2- Pull spring boot image from docker hub 
 docker pull ahmedeldeeb/springboot-docker

3- link mysql image with springboot image 
 docker run -t --name springboot-docker --link docker-mysql:mysql -p 8080:8080 springboot-docker

4- Open App on => localhost:8080/#/

----------------------------------------------------------------------------------------------------------------------------

** Manual Deploy 

0- Build war file 
./mvnw -Pprod,war clean verify

1- Run Mysql Docker Image=> 
 docker run --name=docker-mysql --env="MYSQL_ROOT_PASSWORD=root" --env="MYSQL_PASSWORD=root" --env="MYSQL_DATABASE=testpro" mysql

2- build docker image for spring boot
 docker build . -t springboot-docker 

3- link mysql image with springboot image 
 docker run -t --name springboot-docker --link docker-mysql:mysql -p 8080:8080 springboot-docker

4- Open App on => localhost:8080/#/

----------------------------------------------------------------------------------------------------------------------------

** Run the App local

Before you can build this project, you must install and configure the following dependencies on your machine:

0- install mysql server locally on you machine

1- Node.js: We use Node to run a development web server and build the project. Depending on your system, you can install Node either from source or as a pre-packaged bundle.
After installing Node, you should be able to run the following command to install development tools. You will only need to run this command when dependencies change in package.json.

2- npm install
  We use npm scripts and Webpack as our build system.

Run the following commands in two separate terminals to create a blissful development experience where your browser auto-refreshes when files change on your hard drive.

3- ./mvnw
4- npm start

----------------------------------------------------------------------------------------------------------------------------

** Run integration and unit

src/test/java  contains all test files

1- Integration : all files are integration test files that generated by jhipster except unit test files that creaated manually

2- unit :  com.mycompany.myapp.web.rest.unit && com.mycompany.myapp.service.unit contains unit test files that you can run them one by one ...
 or run testSuite class.